####面向对象： 封装--继承--多态
##################################

#析构函数——当一个对象被删除或者被销毁时，python解释器也会默认调用一个方法，这个方法为__del__()方法，也称为析构方法 在C++里面是 ~加名字
class Animal():
    def __init__(self,name) -> None:
        self.name = name
        print('*'*30 + '初始化init执行'+ '*'*30)
        pass
    def __del__(self):
        print('*'*30 + '执行析构函数'+ '*'*30)
        print('%s 这个对象被清理了' %self.name)
    pass

catt = Animal('大黄猫')

# input('请输入任意信息，否则程序会等待，不能执行析构函数（删除）') 

print('*'*70) # 这句话会先于两个对象的析构函数del的部分执行，因为自动调用时，是执行完文件才会删除两个对象
dogg = Animal('柯基小狗')


#手动删除对象 del+名字 除非手动调用，否则文件都是默认在最后执行析构函数
del catt # 这句话不需要input输入信息就可以执行析构函数
input('请输入任意信息，否则程序会等待，不能执行析构函数（删除）') 
# ******************************执行析构函数******************************
# 大黄猫 这个对象被清理了
# 请输入任意信息，否则程序会等待，不能执行析构函数（删除）123

#总结
# 1、当整个程序脚本执行完毕后会自动调用__del__方法
# 2、当对像被手动销毁时也会自动调用 __del__ 方法
# 3、析构函数一般用于资源回收，利用__del__方法销毁对象回收内存等资源

###################################################################











