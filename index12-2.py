# Python为了优化速度，使用了小整数对象池， 避免为整数频繁申请和销毁内存空间。 
# Python 对小整数的定义是 [-5, 256] 这些整数对象是提前建立好的，不会被垃圾回收。

# 在两个py文件中，小整数的id是一样的，但是大整数的id就不一样了；
a = 148 #小整数
b = 148
print(id(a))
print(id(b))
c = 148
del a
del b
print(id(c))
del c
# 140736970876544
# 140736970876544
# 140736970876544

biga = 10000
bigb = 10000
bigc = 10000
print(id(biga))
print(id(bigb))
print(id(bigc))
del biga
del bigb
del bigc
# 对于本文件，大整数10000的地址abc是一样的，但是二次运行程序，10000的地址会改变，因为是随机分配的，我们使用了del删除了；
# 但是148小整数的地址是不变的，即使我们删除了对象；
# 1265389194672
# 1265389194672
# 1265389194672

# 另一个文件，10000的地址是1936593677584

# 大整数和小整数池的区别：
# 大整数池没有提前创建好对象，是个空池子，需要我们自己去创建，
# 创建好之后，会把整数对象保存到池子里面，后面都不需要去创建了吗，直接使用，除非你用del给删除了






























































